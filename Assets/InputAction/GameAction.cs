//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputAction/GameAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameAction"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""bf19aa8e-9914-4a69-902a-db16507dfacc"",
            ""actions"": [
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""2bf4cf66-6b5c-43d8-934b-3ae693901d1f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TargetLockOn"",
                    ""type"": ""Button"",
                    ""id"": ""0927d03d-b658-4bff-a0a1-261708672f93"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Value"",
                    ""id"": ""b9406004-5f5f-4951-8465-20d7d3a80586"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d6f904ea-84b9-4fc6-b8ba-929e518bcd29"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TargetLockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9044b37d-d079-4055-86c0-88095e3f844a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TargetLockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26adbf88-8338-4ec3-987d-f74816db1da9"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbd683f1-2d02-49c1-bb83-e1fc97a78205"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0333edb-dec3-4ea3-b8cd-f2b315301d70"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player"",
            ""id"": ""fc69fb7f-e82e-4bcb-9a3d-3ee1aff8cd93"",
            ""actions"": [
                {
                    ""name"": ""BulletPress"",
                    ""type"": ""Button"",
                    ""id"": ""c8f9f309-06f1-41c0-ab2a-2f14638c5a07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BulletRelease"",
                    ""type"": ""Button"",
                    ""id"": ""3e8b25f9-0fd0-408b-b173-30c8f96d0b84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponChangePress"",
                    ""type"": ""Button"",
                    ""id"": ""49b2a044-7204-458a-a06b-cf9c527f51d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""7b885378-abd2-451f-b119-5707d612bda0"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Damage"",
                    ""type"": ""Button"",
                    ""id"": ""3282b42e-655c-4144-a985-85cdf15a5827"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CorePullModePress"",
                    ""type"": ""Button"",
                    ""id"": ""e5793fac-5743-4696-9197-3bdbbfbc4381"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.5)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CorePullModeRelese"",
                    ""type"": ""Button"",
                    ""id"": ""9d34d874-de77-4405-9948-16d12bae50cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.5,behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOnScrew"",
                    ""type"": ""Button"",
                    ""id"": ""7b985b72-5591-4390-a6e7-55bba4c950ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChargeCancel"",
                    ""type"": ""Button"",
                    ""id"": ""fd8d1c80-0f66-4d89-945a-7a225c3d80c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cursor"",
                    ""type"": ""Value"",
                    ""id"": ""20c92905-5dc5-4f6b-ac98-d87c24f87247"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CursorSide"",
                    ""type"": ""Value"",
                    ""id"": ""054f247e-cf57-4e33-b9b9-f0e8e651b0cd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Slider"",
                    ""type"": ""Value"",
                    ""id"": ""ddb0e82e-e7de-4a59-91ae-c6008f272921"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectButton"",
                    ""type"": ""Button"",
                    ""id"": ""b5dce8a9-477b-4bed-be2d-3028f294d403"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option"",
                    ""type"": ""Button"",
                    ""id"": ""ee5c1d67-2855-4917-a839-2baabb3d7011"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""397b9c15-7cec-4bc9-9b3e-14057908949e"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BulletRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09966aa2-130a-49b7-886c-cede12844413"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BulletPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c89e3df-0fa5-4497-bf73-241bcb341021"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponChangePress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa4c8ece-fde3-47c6-9b95-eaaa3249eded"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b95a1d9-ace1-4fe0-b5b5-d6be7f68d247"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Damage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d7fef79-b8db-4efa-89e0-264bbd5ad2a4"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CorePullModePress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""836bed94-5ac8-4593-9737-a233958d4d9c"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOnScrew"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""784325f9-0fe6-4d0d-bf93-f206ffa61a5e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CorePullModeRelese"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bb8fb2c-1154-4762-abb2-6dc8543410b3"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChargeCancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""89e96446-1832-4414-a98c-977ca1977763"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""de7a64d9-9d6a-4a40-8360-caac4254a99a"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""ccfbce82-664e-4c56-994f-a5b0a05f24c2"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""788b29b2-a0e2-44a3-bd71-4935d555a259"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""7ffc32ec-2cc6-4a0c-b535-d253684934a9"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7daf3aaa-0070-402a-b506-b59089426936"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorSide"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""3ebcc9de-8934-4e66-a2be-4debb42d4a4d"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorSide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""35183912-b2fe-445b-a87e-bf0a2d89e500"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorSide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""4989fe20-3972-418b-83ce-64de6fca7d68"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorSide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""4c73105b-f638-45e2-80c3-17e30fec4506"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorSide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""243d6069-fda4-4642-8f51-bb14a8be0bac"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slider"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""25ccb784-4c09-4082-a11a-62d167ca9fa8"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slider"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""a0b0d533-cd59-43d5-8f87-07e6fe36d3b5"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slider"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""4c7c00a6-1553-473c-ab24-fd4be81bd2b2"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slider"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""34f0d3a9-1322-4d33-bc57-88419eb2e606"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slider"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6626355a-b80a-4894-a385-04cfd4af1a44"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6eee1fa9-e10f-431e-b460-d5ecc7f4a200"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_Rotation = m_Camera.FindAction("Rotation", throwIfNotFound: true);
        m_Camera_TargetLockOn = m_Camera.FindAction("TargetLockOn", throwIfNotFound: true);
        m_Camera_Aim = m_Camera.FindAction("Aim", throwIfNotFound: true);
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_BulletPress = m_Player.FindAction("BulletPress", throwIfNotFound: true);
        m_Player_BulletRelease = m_Player.FindAction("BulletRelease", throwIfNotFound: true);
        m_Player_WeaponChangePress = m_Player.FindAction("WeaponChangePress", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Damage = m_Player.FindAction("Damage", throwIfNotFound: true);
        m_Player_CorePullModePress = m_Player.FindAction("CorePullModePress", throwIfNotFound: true);
        m_Player_CorePullModeRelese = m_Player.FindAction("CorePullModeRelese", throwIfNotFound: true);
        m_Player_LockOnScrew = m_Player.FindAction("LockOnScrew", throwIfNotFound: true);
        m_Player_ChargeCancel = m_Player.FindAction("ChargeCancel", throwIfNotFound: true);
        m_Player_Cursor = m_Player.FindAction("Cursor", throwIfNotFound: true);
        m_Player_CursorSide = m_Player.FindAction("CursorSide", throwIfNotFound: true);
        m_Player_Slider = m_Player.FindAction("Slider", throwIfNotFound: true);
        m_Player_SelectButton = m_Player.FindAction("SelectButton", throwIfNotFound: true);
        m_Player_Option = m_Player.FindAction("Option", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera
    private readonly InputActionMap m_Camera;
    private List<ICameraActions> m_CameraActionsCallbackInterfaces = new List<ICameraActions>();
    private readonly InputAction m_Camera_Rotation;
    private readonly InputAction m_Camera_TargetLockOn;
    private readonly InputAction m_Camera_Aim;
    public struct CameraActions
    {
        private @GameAction m_Wrapper;
        public CameraActions(@GameAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotation => m_Wrapper.m_Camera_Rotation;
        public InputAction @TargetLockOn => m_Wrapper.m_Camera_TargetLockOn;
        public InputAction @Aim => m_Wrapper.m_Camera_Aim;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void AddCallbacks(ICameraActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraActionsCallbackInterfaces.Add(instance);
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @TargetLockOn.started += instance.OnTargetLockOn;
            @TargetLockOn.performed += instance.OnTargetLockOn;
            @TargetLockOn.canceled += instance.OnTargetLockOn;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
        }

        private void UnregisterCallbacks(ICameraActions instance)
        {
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @TargetLockOn.started -= instance.OnTargetLockOn;
            @TargetLockOn.performed -= instance.OnTargetLockOn;
            @TargetLockOn.canceled -= instance.OnTargetLockOn;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
        }

        public void RemoveCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_BulletPress;
    private readonly InputAction m_Player_BulletRelease;
    private readonly InputAction m_Player_WeaponChangePress;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Damage;
    private readonly InputAction m_Player_CorePullModePress;
    private readonly InputAction m_Player_CorePullModeRelese;
    private readonly InputAction m_Player_LockOnScrew;
    private readonly InputAction m_Player_ChargeCancel;
    private readonly InputAction m_Player_Cursor;
    private readonly InputAction m_Player_CursorSide;
    private readonly InputAction m_Player_Slider;
    private readonly InputAction m_Player_SelectButton;
    private readonly InputAction m_Player_Option;
    public struct PlayerActions
    {
        private @GameAction m_Wrapper;
        public PlayerActions(@GameAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @BulletPress => m_Wrapper.m_Player_BulletPress;
        public InputAction @BulletRelease => m_Wrapper.m_Player_BulletRelease;
        public InputAction @WeaponChangePress => m_Wrapper.m_Player_WeaponChangePress;
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Damage => m_Wrapper.m_Player_Damage;
        public InputAction @CorePullModePress => m_Wrapper.m_Player_CorePullModePress;
        public InputAction @CorePullModeRelese => m_Wrapper.m_Player_CorePullModeRelese;
        public InputAction @LockOnScrew => m_Wrapper.m_Player_LockOnScrew;
        public InputAction @ChargeCancel => m_Wrapper.m_Player_ChargeCancel;
        public InputAction @Cursor => m_Wrapper.m_Player_Cursor;
        public InputAction @CursorSide => m_Wrapper.m_Player_CursorSide;
        public InputAction @Slider => m_Wrapper.m_Player_Slider;
        public InputAction @SelectButton => m_Wrapper.m_Player_SelectButton;
        public InputAction @Option => m_Wrapper.m_Player_Option;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @BulletPress.started += instance.OnBulletPress;
            @BulletPress.performed += instance.OnBulletPress;
            @BulletPress.canceled += instance.OnBulletPress;
            @BulletRelease.started += instance.OnBulletRelease;
            @BulletRelease.performed += instance.OnBulletRelease;
            @BulletRelease.canceled += instance.OnBulletRelease;
            @WeaponChangePress.started += instance.OnWeaponChangePress;
            @WeaponChangePress.performed += instance.OnWeaponChangePress;
            @WeaponChangePress.canceled += instance.OnWeaponChangePress;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Damage.started += instance.OnDamage;
            @Damage.performed += instance.OnDamage;
            @Damage.canceled += instance.OnDamage;
            @CorePullModePress.started += instance.OnCorePullModePress;
            @CorePullModePress.performed += instance.OnCorePullModePress;
            @CorePullModePress.canceled += instance.OnCorePullModePress;
            @CorePullModeRelese.started += instance.OnCorePullModeRelese;
            @CorePullModeRelese.performed += instance.OnCorePullModeRelese;
            @CorePullModeRelese.canceled += instance.OnCorePullModeRelese;
            @LockOnScrew.started += instance.OnLockOnScrew;
            @LockOnScrew.performed += instance.OnLockOnScrew;
            @LockOnScrew.canceled += instance.OnLockOnScrew;
            @ChargeCancel.started += instance.OnChargeCancel;
            @ChargeCancel.performed += instance.OnChargeCancel;
            @ChargeCancel.canceled += instance.OnChargeCancel;
            @Cursor.started += instance.OnCursor;
            @Cursor.performed += instance.OnCursor;
            @Cursor.canceled += instance.OnCursor;
            @CursorSide.started += instance.OnCursorSide;
            @CursorSide.performed += instance.OnCursorSide;
            @CursorSide.canceled += instance.OnCursorSide;
            @Slider.started += instance.OnSlider;
            @Slider.performed += instance.OnSlider;
            @Slider.canceled += instance.OnSlider;
            @SelectButton.started += instance.OnSelectButton;
            @SelectButton.performed += instance.OnSelectButton;
            @SelectButton.canceled += instance.OnSelectButton;
            @Option.started += instance.OnOption;
            @Option.performed += instance.OnOption;
            @Option.canceled += instance.OnOption;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @BulletPress.started -= instance.OnBulletPress;
            @BulletPress.performed -= instance.OnBulletPress;
            @BulletPress.canceled -= instance.OnBulletPress;
            @BulletRelease.started -= instance.OnBulletRelease;
            @BulletRelease.performed -= instance.OnBulletRelease;
            @BulletRelease.canceled -= instance.OnBulletRelease;
            @WeaponChangePress.started -= instance.OnWeaponChangePress;
            @WeaponChangePress.performed -= instance.OnWeaponChangePress;
            @WeaponChangePress.canceled -= instance.OnWeaponChangePress;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Damage.started -= instance.OnDamage;
            @Damage.performed -= instance.OnDamage;
            @Damage.canceled -= instance.OnDamage;
            @CorePullModePress.started -= instance.OnCorePullModePress;
            @CorePullModePress.performed -= instance.OnCorePullModePress;
            @CorePullModePress.canceled -= instance.OnCorePullModePress;
            @CorePullModeRelese.started -= instance.OnCorePullModeRelese;
            @CorePullModeRelese.performed -= instance.OnCorePullModeRelese;
            @CorePullModeRelese.canceled -= instance.OnCorePullModeRelese;
            @LockOnScrew.started -= instance.OnLockOnScrew;
            @LockOnScrew.performed -= instance.OnLockOnScrew;
            @LockOnScrew.canceled -= instance.OnLockOnScrew;
            @ChargeCancel.started -= instance.OnChargeCancel;
            @ChargeCancel.performed -= instance.OnChargeCancel;
            @ChargeCancel.canceled -= instance.OnChargeCancel;
            @Cursor.started -= instance.OnCursor;
            @Cursor.performed -= instance.OnCursor;
            @Cursor.canceled -= instance.OnCursor;
            @CursorSide.started -= instance.OnCursorSide;
            @CursorSide.performed -= instance.OnCursorSide;
            @CursorSide.canceled -= instance.OnCursorSide;
            @Slider.started -= instance.OnSlider;
            @Slider.performed -= instance.OnSlider;
            @Slider.canceled -= instance.OnSlider;
            @SelectButton.started -= instance.OnSelectButton;
            @SelectButton.performed -= instance.OnSelectButton;
            @SelectButton.canceled -= instance.OnSelectButton;
            @Option.started -= instance.OnOption;
            @Option.performed -= instance.OnOption;
            @Option.canceled -= instance.OnOption;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface ICameraActions
    {
        void OnRotation(InputAction.CallbackContext context);
        void OnTargetLockOn(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
    }
    public interface IPlayerActions
    {
        void OnBulletPress(InputAction.CallbackContext context);
        void OnBulletRelease(InputAction.CallbackContext context);
        void OnWeaponChangePress(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnDamage(InputAction.CallbackContext context);
        void OnCorePullModePress(InputAction.CallbackContext context);
        void OnCorePullModeRelese(InputAction.CallbackContext context);
        void OnLockOnScrew(InputAction.CallbackContext context);
        void OnChargeCancel(InputAction.CallbackContext context);
        void OnCursor(InputAction.CallbackContext context);
        void OnCursorSide(InputAction.CallbackContext context);
        void OnSlider(InputAction.CallbackContext context);
        void OnSelectButton(InputAction.CallbackContext context);
        void OnOption(InputAction.CallbackContext context);
    }
}
